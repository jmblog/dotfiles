#!/bin/bash

DOTFILES_DIRECTORY="${HOME}/.dotfiles"
DOTFILES_TARBALL_PATH="https://github.com/jmblog/dotfiles/tarball/master"
DOTFILES_GIT_REMOTE="https://github.com/jmblog/dotfiles"

# Logging stuff
function e_header()   { echo -e "\n\033[1m$@\033[0m"; }
function e_success()  { echo -e " \033[1;32m✔\033[0m  $@"; }
function e_error()    { echo -e " \033[1;31m✖\033[0m  $@"; }
function e_warning()  { echo -e " \033[1;31m!\033[0m  $@"; }
function e_arrow()    { echo -e " \033[1;33m➜\033[0m  $@"; }

# Step 0
# ----------------------------------------------------------------------

# Check for gcc
if [[ ! $(type -P gcc) ]]; then
  e_error "The XCode Command Line Tools must be installed first."
  printf "  Download them from: https://developer.apple.com/downloads\n"
  printf "  Then run: bash ~/.dotfiles/bin/dotfiles\n"
  exit 1
fi

# Check for Homebrew
if [[ ! $(type -P brew) ]]; then
  e_header "Installing Homebrew..."
  /usr/bin/ruby -e "$(curl -fsSkL raw.github.com/mxcl/homebrew/go)"
else
  e_header "Updating Homebrew..."
  brew update
fi

# Check for git
if [[ ! $(type -P git) ]]; then
  e_header "Installing Git..."
  brew install git
fi

# Step 1
# ----------------------------------------------------------------------

if [[ ! -d ${DOTFILES_DIRECTORY} ]]; then
    mkdir ${DOTFILES_DIRECTORY}
fi

cd ${DOTFILES_DIRECTORY}

# Initialize the git repo if it's missing
if [[ ! i$(git rev-parse --is-inside-work-tree &> /dev/null) ]]; then
  e_header "Initializing git repository..."
  git init
  git remote add origin ${DOTFILES_GIT_REMOTE}
  git fetch origin master
  git reset --hard FETCH_HEAD
  git clean -fd
fi


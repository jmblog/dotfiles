# Compile .zshrc automatically
# ----------------------------------------------------------------------

if [ ~/.zshrc -nt ~/.zshrc.zwc ]; then
    zcompile ~/.zshrc
fi

if type brew &>/dev/null; then
    FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
    
    autoload -Uz compinit
    compinit
fi

# Setup pure prompt
# ----------------------------------------------------------------------

autoload -U promptinit; promptinit
prompt pure

# Set path
# ----------------------------------------------------------------------

path=($HOME/bin(N-/) /usr/local/bin(N-/) /usr/local/opt/coreutils/libexec/gnubin(N-/) /usr/local/opt/openssl/bin(N-/) /usr/local/go/bin $path)

# Set alias
# ----------------------------------------------------------------------

alias ls="ls --color=auto -AF"
alias ll="ls -l"
alias tree='tree -F --dirsfirst -C'
alias diff="colordiff -s"

# Exports
# ----------------------------------------------------------------------

# Japanese and use UTF-8
export LANG="ja_JP.UTF-8"

# Use vim as the default editor
export EDITOR="vim"

# Unset default LS_COLORS
unset LS_COLORS

# History
# ----------------------------------------------------------------------

HISTFILE=${HOME}/.zsh_history
HISTSIZE=10000
SAVEHIST=10000

# Ignore some commands
HISTORY_IGNORE="(ls|ll|pwd|exit)"

# ヒストリに追加されるコマンド行が古いものと同じなら古いものを削除
setopt hist_ignore_all_dups

# スペースで始まるコマンド行はヒストリリストから削除
setopt hist_ignore_space

# ヒストリを呼び出してから実行する間に一旦編集可能
setopt hist_verify

# 余分な空白は詰めて記録
setopt hist_reduce_blanks

# 古いコマンドと同じものは無視
setopt hist_save_no_dups

# historyコマンドは履歴に登録しない
setopt hist_no_store

# 補完時にヒストリを自動的に展開
setopt hist_expand

# 履歴を追加
setopt append_history

# 複数シェル間で履歴を共有
setopt share_history

# 履歴をインクリメンタルに追加
setopt inc_append_history

# # nvm
# # ----------------------------------------------------------------------

# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# # call nvm use automatically whenever you enter a directory that contains an .nvmrc file
# autoload -U add-zsh-hook
# load-nvmrc() {
#     local node_version="$(nvm version)"
#     local nvmrc_path="$(nvm_find_nvmrc)"
    
#     if [ -n "$nvmrc_path" ]; then
#         local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")
        
#         if [ "$nvmrc_node_version" = "N/A" ]; then
#             nvm install --reinstall-packages-from=current
#             elif [ "$nvmrc_node_version" != "$node_version" ]; then
#             echo "current node version: $node_version"
#             nvm use
#         fi
#         elif [ "$node_version" != "$(nvm version default)" ]; then
#         echo "Reverting to nvm default version"
#         nvm use default
#     fi
# }
# add-zsh-hook chpwd load-nvmrc
# load-nvmrc

# volta
# ----------------------------------------------------------------------
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"


# ruby
# ----------------------------------------------------------------------

export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init - --no-rehash)" # add --no-rehash flag to stop rehashing

# Ubie Eng-Tools
# ----------------------------------------------------------------------
export PATH="$HOME/.ubie-bin:$PATH"
export PATH="$HOME/Projects/ubie-inc/eng-tools:$PATH"
export GOOGLE_APPLICATION_CREDENTIALS="$HOME/Projects/ubie-inc/eng-tools/local-sa-key.json"

# To profiling zsh
# ----------------------------------------------------------------------

#if type zprof > /dev/null 2>&1; then
#  zprof | less
#fi

[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
export PATH="/usr/local/sbin:$PATH"
export PATH="/usr/local/opt/openjdk@11/bin:$PATH"

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/jimbo/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/jimbo/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/jimbo/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/jimbo/google-cloud-sdk/completion.zsh.inc'; fi
